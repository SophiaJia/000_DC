text_filter_cell <- function(x){
#input : string
#output : text, number, mix
options(warn=-1)
y = "mix"
if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
y
}
#testing
letters <- "abc"
numbers <- "12.3"
mix <- "b1dd"
text_filter_cell(letters)
text_filter_cell(numbers)
text_filter_cell(mix)
### text a column
text_filter_col <- function(x){
#input : a column
#output, text, number mix
}
eg_long <- read_csv("testdata/eg_long.csv")
library(readr)
eg_long <- read_csv("testdata/eg_long.csv")
View(eg_long)
tmp <- eg_long$WBRT.dose
tmp
text_filter_cell(tmp)
!grepl("[^A-Za-z]", text)
!grepl("[^A-Za-z]", tmp)
!is.na(as.numeric(tmp))
text_filter_cell <- function(x){
#input : string
#output : text, number, mix
options(warn=-1)
y = "mix"
if(grepl("NA",x)) y = NA
else if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
y
}
text_filter_cell(tmp)
text_filter_cell(tmp[1])
tmp[1]
grepl("NA", tmp[1])
text_filter_cell <- function(x){
#input : string
#output : text, number, mix
options(warn=-1)
y = "mix"
if(x == "NA") y = NA
else if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
y
}
(tmp[1])
text_filter_cell(tmp[1])
tmp[1] == "NA"
class(mp[1])
class(tmp[1])
as.numeric(tmp[1])
is.numeric(tmp[1])
tmp
tmp[2]
is.numeric(tmp[2])
as.numeric(tmp[2])
text_filter_cell <- function(x){
#input : string
#output : text, number, mix
options(warn=-1)
y = "mix"
if(is.na(x)) y = NA
else if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
y
}
text_filter_cell(tmp[1])
text_filter_cell(tmp[2])
text_filter_cell(tmp[3])
text_filter_cell(tmp[4])
text_filter_cell(tmp[5])
text_filter_cell(tmp[6])
text_filter_cell(tmp[7\])
text_filter_cell(tmp[7])
text_filter_cell(tmp)
apply(tmp,text_filter_cell)
sapply(tmp,text_filter_cell)
table(sapply(tmp,text_filter_cell))
View(eg_long)
tmp2 <- eg_long$date.of.first.systemic.metastases
table(sapply(tmp2,text_filter_cell))
tmp2 <- paste(eg_long$WBRT.dose, eg_long$Pathology)x
tmp2 <- paste(eg_long$WBRT.dose, eg_long$Pathology)
tmp2
table(sapply(tmp2,text_filter_cell)) #date variable consider as mix
text_filter_cell(tmp1])
text_filter_cell(tmp2[7]])
text_filter_cell(tmp2[7])
colnames(eg_long)
Dtest <- eg_long[,c(1,2,3,5,19)]
View(Dtest)
Dtest <- eg_long[,c(1,2,3,19)]
View(Dtest)
# mix text with number
Dtest$tn <- paste(Dtest$Gender, Dtest$KPS)
View(Dtest)
table(KPS)
table(Dtest$KPS)
# parciel mix test with number
Dtest$tnp <- ifelse(Dtest$KPS == 90, KPS, tn)
# parciel mix test with number
Dtest$tnp <- ifelse(Dtest$KPS == 90,Dtest$KPS, Dtest$tn)
View(Dtest)
# randomly missing for each type
Dtest <- cbind(Dtest, Dtest[-1])
View(Dtest)
View(eg_long)
# ID , text, number, date (regular)
Dtest <- eg_long[,c(1,2,3,19)]
# mix text with number
Dtest$tn <- paste(Dtest$Gender, Dtest$KPS)
# parciel mix test with number
Dtest$tnp <- ifelse(Dtest$KPS == 90,Dtest$KPS, Dtest$tn)
Dtest <- eg_long[,c(1,2,3,19,14)]
# mix text with number
Dtest$tn <- paste(Dtest$Gender, Dtest$KPS)
# parciel mix test with number
Dtest$tnp <- ifelse(Dtest$KPS == 90,Dtest$KPS, Dtest$tn)
View(Dtest)
# randomly missing tnp
Dtest$tnpr <- ifelse(Dtest$KPS == 80, NA, Dtest$tnp)
View(Dtest)
## create a simulated dateset
library(readr)
eg_long <- read_csv("testdata/eg_long.csv")
# ID , text, number, date (regular)
Dtest <- eg_long[,c(1,2,3,19,14,27)]
# mix text with number
Dtest$tn <- paste(Dtest$Gender, Dtest$KPS)
# parciel mix test with number
Dtest$tnp <- ifelse(Dtest$KPS == 90,Dtest$KPS, Dtest$tn)
# randomly missing tnp
Dtest$tnpr <- ifelse(Dtest$KPS == 80, NA, Dtest$tnp)
View(Dtest)
table(sapply(Dtest$tnpr,text_filter_cell))
table(sapply(Dtest$tnpr,text_filter_cell), useNA = T)
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")
ifelse(Dtest$KPS, 50,Dtest$Gender, Dtest$tnp)
ifelse(Dtest$KPS == 50,Dtest$Gender, Dtest$tnp)
# randomly missing tnp
Dtest$tnpr <- ifelse(Dtest$KPS == 80, NA,
ifelse(Dtest$KPS == 50, Dtest$Gender, Dtest$tnp))
View(Dtest)
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")
?save
save(Dtest, "Dtest.RData")
save(Dtest,file = "Dtest.RData")
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")
length(x)
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")/length(Dtest$tnpr)
tt <- table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")/length(Dtest$tnpr)
tt$mix
colnames(tt)
tt
names(tt)
tt$mix
colnames(tt) <- names(tt)
as.data.frame(tt)
as.data.frame(tt) %>% y
library(tidyverse)
as.data.frame(tt) %>% t
text_filter_cell("32;")
as.numeric(32:)
as.numeric("32:")
as.numeric("32:")
is.numeric("32:")
?is.numeric()
is.numeric(33L)
is.numeric(d32)
is.numeric("d32")
text_filter_cell <- function(x){
#input : string
#output : text, number, mix
#date variable consider as mix
options(warn=-1)
y = "mix"
if(is.na(x)) y = NA #csv file can recognize NA
else if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
else if(grepl("//d",x)) y = "maybe"
y
}
text_filter_cell(letters)
text_filter_cell(numbers)
text_filter_cell(mix)
grepl("\\d","344h")
text_filter_cell <- function(x){
#input : string
#output : text, number, mix
#date variable consider as mix
options(warn=-1)
y = "mix"
if(is.na(x)) y = NA #csv file can recognize NA
else if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
else if(grepl("\\d",x)) y = "maybe"
y
}
text_filter_cell(letters)
text_filter_cell(numbers)
text_filter_cell(mix)
text_filter_cell(tmp2[7])
text_filter_cell("32;")
text_filter_cell("";")
### text a column
text_filter_pre <- function(x){
#input : a column
#output, check the percentage of text, number, mix in this column
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")/length(Dtest$tnpr)
}
%>%
tmp <- eg_long$WBRT.dose
tmp2 <- eg_long$date.of.first.systemic.metastases
table(sapply(tmp,text_filter_cell))
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")/length(Dtest$tnpr)
# if number then , consider as number
# if no mix and no number then consider as text
# if mix and no number
#
text_filter_cell(";")
text_filter_cell("3t")
text_filter_cell("1.1.1.1.1")
as.numeric(1.1.1.1.1)
as.numeric("1.1.1.1.1")
parse_number("1.1.1.1.1")
text_filter_cell <- function(x){
#input : string
#output : text, number, mix
#date variable consider as mix
options(warn=-1)
y = "Nothing"
if(is.na(x)) y = NA #csv file can recognize NA
else if(!grepl("[^A-Za-z]", x)) y = "text"
else if (!is.na(as.numeric(x))) y = "number"
else if(grepl("\\d",x)) y = "Mnumber"
y
}
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")
c1 <- table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always")
as.metrix(c1)
as.matrix(c1)
as.matrix(c1) %>% names
as.matrix(c1) %>% colnames()
c1 %>% colnames
c1 %>% names()
c2 <- as.matrix(c1)  c1
c2 <- as.matrix(c1)
c2
as.data.frame(c1)
c2 <- as.data.frame(c1)
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always") %>% names()
c2 <- data.frame(unclass(c1))
c1 <- table(sapply(Dtest$tnpr,text_filter_cell))
c2 <- data.frame(unclass(c1))
c2
as.data.frame.matrix(c1)
c1
str(C1)
str(c1)
c1$table
c1
tibble(c1)
as.matrix(c1)
as.matrix(c1) %>% t
c2 <- s.matrix(c1) %>% t
c2 <- as.matrix(c1) %>% t
c2
c2 %>% names()
c2[1]
c2[,1]
c2[1,]
colnames(c2)
c2$Mnumber
c2[,"Mnumber"]
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always") %>% as.matrix() %>% t
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always") %>% as.matrix() %>% t %>% names
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always") %>% as.matrix() %>% t %>% colnm
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always") %>% as.matrix() %>% t %>% colnames
table(sapply(Dtest$tnpr,text_filter_cell), useNA ="always") %>% as.matrix() %>% t %>% colnames[,4]
